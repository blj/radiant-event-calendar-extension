= Event Calendar (iCal) Extension for Radiant =

Created by: Loren Johnson - www.hellovenado.com
   Version: 0.7
   Contact: loren@hellovenado.com

== FORKED IT

Contact: William Ross <will at spanner.org>

This fork has been updated to handle CalDav servers. This mostly just meant adding basic http auth and the correct handling of https addresses. It works because a plain get to a caldav address like this:

  https://calendar.server.com:8443/calendars/users/someone/calendar/
  
will return an ics file that vpim can read in the usual way. Please note that we are not doing proper CalDav here, but taking advantage of a compatibility with the simpler ical standard. It works with addresses under /calendar, using UIDs or GUIDs, but not at all with principals or groups or anything more advanced.

It does work very nicely, though: your users can all enter and edit events into a shared calendar using Apple iCal or Sunbird or similar, and the same data will be displayed on your site.

=== Quirks

If you set up subcalendars in iCal they will have their own guid-based urls. The first calendar in the list will be at

  https://calendar.server.com:8443/calendars/users/someone/calendar/
  
but the others will have addresses like

  https://calendar.server.com:8443/calendars/users/someone/1D09F977-2F27-4E87-954D-FFED95A70BC0/

The best way to discover those addresses is to point your web browser at https://calendar.server.com:8443/calendars/users/someone/ and log in.

=== Compatibility

I've only tested this with Darwin Calendar Server (on Ubuntu). It should be exactly the same with iCal server on OS X, and in theory any other CalDav-compliant back end. See http://caldav.calconnect.org/ for more possibilities. It should also work very nicely with Google Calendar but I haven't tried that yet either.

=== Other changes

* The slug criterion in EventSearch.execute had to be changed to calendar.slug
* Calendars now self-refresh on the next request after a specified (or default) period has passed. Set the refresh period to zero (not null) if you don't fancy that.
* There is now an admin/calendar/show template that previews the calendar in the usual tabular-month format. This is loosely based on helper code extracted from topfunky's calendar_helper.

=== Plans

* The calendar tags need to be redone. It would be much nicer to have <r:calendar...> and <r:event ...> spaces.
* Tags to show tabulated calendar on published pages with inline navigation between months (and appropriate cache-handling)
* Integration with our reader-group extension will mean that each group can have its own calendar. You'll still have to set up the caldav server separately, though.
* admin styles extracted into an admin/calendar stylesheet, so you need to run rake radiant:extensions:event_calendar:update.

It's not worth trying to turn this into a proper CalDav client - there whole point is that there are plenty of nearly-good desktop clients already, and if you don't like those there's google calendar - but it might well be worth thinking about simple CalDav administration. There's nothing out there at the moment that will let you administer DCS in a sensible way, and I'm still trying to work out how to build in a 'create calendar' button.



Back to the original readme:

== INSTALLATION == 
* Req'd Radiant Version: 0.6.4+ (not tested with earlier versions, may work with all 0.6+)

1. Checkout extension to the vendor/extensions directory of your Radiant app using svn (you may have already done this): 

  svn co http://svn.fn-group.com/radiant_extensions/event_calendar

2. Install the VPIM iCal/vCal parsing gem: gem install vpim

3. Migrate extensions: rake db:migrate:extensions

4. Copy extension public assets to Radiant public directory. Currently this will create the default public/icals directory which is required
as a home for the cached ical subscription files, this is configurable via Radiant::Config["event_calendar.icals_path"]:

  rake radiant:extensions:event_calendar:update

5. From Admin navigate to your new "Event Calendars" tab and click "Add a Calendar", enter your iCal subscription URL and name for the calendar and press Save.

6. You can now manually refresh the calendar from the subscription once you've saved it by clicking on the Refresh link. 


== AN EXAMPLE EVENT-CALENDAR IMPLEMENTATION ==

1. Create a new Calendar under the EventCalendar tab in admin entering at minimum a Name and iCal URL

2. Click on the "Refresh" link for the calendar after it's been successfuly created to download all the events from the iCal subscription

3. Create a new page and select EventCalendar as the Page Type

4. Paste the following code in the body page part then save the page

<r:calendar>
  <table>
    <tr>
      <td>
        <ul>
          <r:nav>
            <li><r:week_link class="navLink" /></li> 
            <li><r:month_link class="navLink" /></li>
            <li><r:year_link class="navLink" /></li>
          </r:nav>
       </ul>
      </td>
    </tr>
    <tr>
      <td>
        <h2><r:name /></h2>
        <h3><r:begin_date format="%d %B" /> - <r:end_date format="%d %B" /></h3>
      </td>
    </tr>
  </table>
  <div id="eventList">
   <r:event:each>
      <div class="eventBox">
      <r:header><h5><r:start format="%d %B, %A" /></h5></r:header>
      <table class="event" id="event<r:id />" onclick="toggleVisible('detail<r:id />'); Effect.Highlight('event<r:id />'); return false;">
        <tr>
          <td style="text-transform:uppercase;width:180px;">
            <r:calendar_name />
          </td>
          <td style="">
            <r:title />
          </td>
       </tr>
       <tr>
          <td style="text-transform:uppercase;width:180px;">
          </td>
          <td>
           <div id="detail<r:id />" class="detail">
             <r:daterange format="%I:%M %p" /><br />
             <r:location /><br />
             <r:description />
           </div>
         </td>
       </tr>
     </table>
     </div>
    </r:event:each>
  </div>     
</r:calendar>

5. Navigate to the newly created page within the public site 
           

== NOTES ==

* The handling of all paths below the node an EventCalendar Page are overridden to capture the calendar "category" and "slug". 
So, if you create a page under Home > Calendar and apply the EventCalendar page type to it, and through admin create a calendar with the category of 
"master" and a name of "youth" you'll be able to access your calendar at http://yoursite.com/calendar/master/youth. Also, you'll also be able to see 
events for all calendars with a category of "master" by navigating to http://yoursite.com/calendar/master/all. 

* For add'l documentation please refer to the Radiant tag reference (the "Available tags" link within Page edit) for the <r:calendar /> tag series, 
you'll only see the Calendar tag documentation available when editing a page that has already been saved as the EventCalendar Page Type.

* Please refer to the tag documentation under "Available Tags" when editing a page in Radiant (page must be already created and of EventCalendar type).

* If you wish to setup a Cron job to automatically keep you Radiant calendar in-sync with the iCal feed have Cron run the following from within the root 
of your Radiant application: script/runner -e production "Calendar::refresh_all"


== DEVELOPMENT ROADMAP ==

* Single page view for each Event, possibly adding ability to associate an Event with a particular Radiant page also.
* Manual event entry screens. Allow manual events to be mixed in with events from subscriptions.
* Tag to create link to source ical file (for offering subscription link)


